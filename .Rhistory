abline(h=beta,col=rgb(0,1,0,.8),lty=2)
# discard burn-in
beta.save <- out.cond.2.full.pg$beta.save[,-(1:n.burn)]
load("~/Desktop/GlacierBay_Project/GlacierBay_Code/SPP_script.RData")
# discard burn-in
beta.save <- out.cond.2.full.pg$beta.save[,-(1:n.burn)]
beta.0.save <- out.cond.2.full.pg$beta.0.save[-(1:n.burn)]
# trace plots
layout(matrix(1:2,2,1))
plot(beta.0.save,type="l")
matplot(t(beta.save),lty=1,type="l")
source(here("GlacierBay_Code", "spp.stg3.mcmc.R"))
tic()
out.cond.pg3 <- spp.stg3.mcmc(out.cond.pg)
toc() # ~ 1 sec
# discard burn-in
beta.save <- out.cond.pg3$beta.save[,-(1:n.burn)]
beta.0.save <- out.cond.pg3$beta.0.save[-(1:n.burn)]
# trace plots
layout(matrix(1:2,2,1))
plot(beta.0.save,type="l")
matplot(t(beta.save),lty=1,type="l")
source(here("GlacierBay_Code", "spp.stg3.mcmc.R"))
tic()
out.cond.pg3 <- spp.stg3.mcmc(out.cond.pg)
toc() # ~ 1 sec
# discard burn-in
beta.save <- out.cond.pg3$beta.save[,-(1:n.burn)]
beta.0.save <- out.cond.pg3$beta.0.save[-(1:n.burn)]
# trace plots
layout(matrix(1:2,2,1))
plot(beta.0.save,type="l")
matplot(t(beta.save),lty=1,type="l")
effectiveSize(beta.0.save)
beta.save <- out.cond.pg3$beta.save[,-(1:n.burn)]
beta.0.save <- out.cond.pg3$beta.0.save[-(1:n.burn)]
# trace plots
layout(matrix(1:2,2,1))
plot(beta.0.save,type="l")
matplot(t(beta.save),lty=1,type="l")
effectiveSize(beta.0.save)
effectiveSize(beta.save[1,])
effectiveSize(beta.save[2,])
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save[-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
lines(density(out.cond.2.full.pg$beta.0.save[-(1:n.burn)],n=1000,adj=2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.0.save[-(1:n.burn)],n=1000,adj=2),col="green",lwd=2)
hist(out.comp.full$beta.save[1,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,5))
lines(density(out.cond.2.full.pg$beta.save[1,-(1:n.burn)],n=1000,adj=2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.save[1,-(1:n.burn)],n=1000,adj=2),col="green",lwd=2)
hist(out.comp.full$beta.save[2,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1.5))
lines(density(out.cond.2.full.pg$beta.save[2,-(1:n.burn)],n=1000,adj=2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.save[2,-(1:n.burn)],n=1000,adj=2),col="green",lwd=2)
library(tidyverse)
library(raster)
library(spatstat)
library(tictoc)
library(here)
set.seed(1234)
# set domain
x.domain <- c(0,0.9)
y.domain <- c(0,0.9)
# define the coordinates for window squares
win.length <- 0.1
gap <- 0.1
domain.length <- x.domain[2] - x.domain[1]
coords <- expand.grid(x = seq(gap, domain.length - win.length - gap, by = win.length + gap),
y = seq(gap, domain.length - win.length - gap, by = win.length + gap))
# create individual squares
squares <- lapply(1:nrow(coords), function(i) {
x0 <- coords$x[i]
y0 <- coords$y[i]
owin(xrange = c(x0, x0 + win.length), yrange = c(y0, y0 + win.length))
})
# combine squares into single window
combined.window <- do.call(union.owin, squares)
# calculate areas
tot.area <- (x.domain[2] - x.domain[1])*(y.domain[2] - y.domain[1])
tot.win.area <- area.owin(combined.window)
n.win <- 16
win.area <- tot.win.area/n.win
tot.nonwin.area <- tot.area - tot.win.area
# plot the window
domain <- owin(xrange = c(0,domain.length), yrange = c(0,domain.length))
x.m <- 100
y.m <- 100
m <- x.m*y.m
x.full <- seq(x.domain[1], x.domain[2], length.out = x.m)
y.full <- x.full
s.full <- expand.grid(x = x.full, y = y.full)
plot(domain)
X.full <- matrix(0,m,2)
x1 <- s.full[,1]
x2 <- s.full[,2]
X.full[,1] <- x1
X.full[,2] <- x2
# set beta
beta <- c(2,1)
beta.0 <- 4
lam.full <- exp(beta.0+X.full%*%beta)
lam.max <- max(lam.full)
M=rpois(1, lam.max)
x.superpop <- runif(M, x.domain[1], x.domain[2])
y.superpop <- runif(M, y.domain[1], y.domain[2])
s.superpop <- cbind(x.superpop, y.superpop)
X.superpop <- cbind(x.superpop, y.superpop)
lam.superpop=exp(beta.0+X.superpop%*%beta)
obs.idx=rbinom(M,1,lam.superpop/lam.max)==1
s.obs=s.superpop[obs.idx,] # total observed points
X.obs=X.superpop[obs.idx,]
lam.obs <- lam.superpop[obs.idx]
N=nrow(s.obs) # 218
obs.win <- inside.owin(s.obs[,1], s.obs[,2], combined.window)
obs.win.idx <- (1:N)[obs.win]
n=length(obs.win.idx) # 44
full.win <- inside.owin(s.full[,1], s.full[,2], combined.window)
full.win.idx <- (1:m)[full.win]
s.win=s.obs[obs.win.idx,]
X.win=X.obs[obs.win.idx,]
X.win.full=X.full[full.win.idx,]
X.nowin.full=X.full[-full.win.idx,]
n.mcmc=100000
source("spp.comp.mcmc.R")
tic()
out.comp.full=spp.comp.mcmc(s.win,X.win,X.win.full,ds,win.area,n.mcmc,0.1,0.1)
ds <- (x.full[2] - x.full[1])^2
n.mcmc=100000
source("spp.comp.mcmc.R")
tic()
out.comp.full=spp.comp.mcmc(s.win,X.win,X.win.full,ds,win.area,n.mcmc,0.1,0.1)
toc() # 6.568 sec
n.bg <- 10000
bg.pts <- rpoint(n.bg, win = combined.window)
# prepare X matrix
X.bg <- cbind(bg.pts$x, bg.pts$y)
X.bern <- rbind(X.win, X.bg)
y.bern <- rep(0, n + n.bg)
y.bern[1:n] <- 1
source(here("Polya_Gamma.R"))
source("Polya_Gamma.R")
setwd("~/Desktop/GlacierBay_Project/GlacierBay_Code/spp_win_2D")
source("Polya_Gamma.R")
setwd("/Users/rlr3795/Desktop/GlacierBay_Project/GlacierBay_Code")
detach("package:here", unload = TRUE)
library(here)
source(here("Polya_Gamma.R"))
X.pg <- cbind(rep(1, nrow(X.bern)), X.bern)
p <- ncol(X.pg)
mu.beta <- rep(0, p)
sigma.beta <- diag(2.25, p)
tic()
beta.save.pg <- polya_gamma(y.bern, X.pg, mu.beta, sigma.beta, 100000)
toc() # 236 sec
out.cond.pg <- list(beta.save = beta.save.pg$beta[-1,], beta.0.save = rnorm(n.mcmc, 0, 10),
n.mcmc = 100000, n = n, ds = ds, X.full = X.win.full)
beta.save <- beta.save.pg$beta[2:3,]
# theta.save <- rep(0,n.mcmc)
lam.int.save <- rep(0, n.mcmc)
for(k in 1:n.mcmc){
if(k%%1000==0){cat(k," ")}
lam.int.save[k] <- sum(exp(log(ds)+X.win.full%*%beta.save[,k]))
# theta.save[k] <- rgamma(1, 0.01 + n, rate = 0.01 + lam.int)
};cat("\n")
out.cond.pg <- list(beta.save = beta.save.pg$beta[-1,],
# beta.0.save = log(rgamma(n.mcmc, n + 0.001, 1.001)),
n.mcmc = n.mcmc, n = n, ds = ds, X.full = X.win.full,
lam.int.save = lam.int.save)
source(here("spp_win_2D", "spp.stg2.mcmc.R"))
# using num quad results
tic()
out.cond.pg2 = spp.stg2.mcmc(out.cond.pg)
# prepare for second stage
# beta.0.precise <- rnorm(n.mcmc, mean = 3.7, sd = 1)
out.cond.pg <- list(beta.save = beta.save.pg$beta[-1,], beta.0.save = rnorm(n.mcmc, 0, 10),
n.mcmc = 100000, n = n, ds = ds, X.full = X.win.full)
source(here("spp_win_2D", "spp.stg2.mcmc.R"))
# using num quad results
tic()
out.cond.pg2 = spp.stg2.mcmc(out.cond.pg)
toc()
# acceptance rate: 0.017
# prepare for third stage
out.cond.pg <- list(beta.save = beta.save.pg$beta[-1,],
# beta.0.save = log(rgamma(n.mcmc, n + 0.001, 1.001)),
n.mcmc = n.mcmc, n = n, ds = ds, X.full = X.win.full,
lam.int.save = lam.int.save)
source(here("spp.stg3.mcmc.R"))
# tic()
out.cond.pg3 <- spp.stg3.mcmc(out.cond.pg)
# toc()
layout(matrix(1:3,1,3))
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save[-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
n.burn <- 10000
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save[-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.0.save,n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.0.save[-(1:n.burn)],n=1000),col="green",lwd=2)
lines(density(out.cond.pg3$beta.0.save[-(1:n.burn)],n=1000),col="blue",lwd=2)
abline(v = 4, lty = 2, col = "red")
hist(out.comp.full$beta.save[1,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.save[1,],n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.save[1,-(1:n.burn)],n=1000),col="green",lwd=2)
lines(density(out.cond.pg3$beta.save[1,-(1:n.burn)],n=1000),col="blue",lwd=2)
abline(v = 2, lty = 2, col = "red")
hist(out.comp.full$beta.save[2,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.save[2,],n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.save[2,-(1:n.burn)],n=1000),col="green",lwd=2)
lines(density(out.cond.pg3$beta.save[2,-(1:n.burn)],n=1000),col="blue",lwd=2)
abline(v = 1, lty = 2, col = "red")
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save[-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.0.save,n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.0.save[-(1:n.burn)],n=1000),col="green",lwd=2, adj = 2)
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save[-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.0.save,n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.0.save[-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
lines(density(out.cond.pg3$beta.0.save[-(1:n.burn)],n=1000, adj = 2),col="blue",lwd=2)
abline(v = 4, lty = 2, col = "red")
hist(out.comp.full$beta.save[1,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.save[1,],n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.save[1,-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
lines(density(out.cond.pg3$beta.save[1,-(1:n.burn)],n=1000, adj = 2),col="blue",lwd=2)
abline(v = 2, lty = 2, col = "red")
hist(out.comp.full$beta.save[2,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.save[2,],n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.save[2,-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
lines(density(out.cond.pg3$beta.save[2,-(1:n.burn)],n=1000, adj = 2),col="blue",lwd=2)
abline(v = 1, lty = 2, col = "red")
beta.save <- beta.save.pg$beta[2:3,]
theta.save <- rep(0,n.mcmc)
lam.int.save <- rep(0, n.mcmc)
for(k in 1:n.mcmc){
if(k%%1000==0){cat(k," ")}
lam.int.save[k] <- sum(exp(log(ds)+X.win.full%*%beta.save[,k]))
theta.save[k] <- rgamma(1, 0.01 + n, rate = 0.01 + lam.int)
};cat("\n")
beta.save <- beta.save.pg$beta[2:3,]
theta.save <- rep(0,n.mcmc)
lam.int.save <- rep(0, n.mcmc)
for(k in 1:n.mcmc){
if(k%%1000==0){cat(k," ")}
lam.int <- sum(exp(log(ds)+X.win.full%*%beta.save[,k]))
theta.save[k] <- rgamma(1, 0.01 + n, rate = 0.01 + lam.int)
lam.int.save[k] <- lam.int
};cat("\n")
beta.0.save <- log(theta.save)
# compare marginal posterior
hist(out.comp.full$beta.0.save[-(1:1000)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
lines(density(beta.0.save[-(1:1000)],n=1000, adjust = 2),col="red",lwd=2)
lines(density(out.cond.pg2$beta.0.save[-(1:1000)],n=1000, adjust = 2),
col="green",lwd=2)
par(mfrow = c(1,1))
# compare marginal posterior
hist(out.comp.full$beta.0.save[-(1:1000)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
lines(density(beta.0.save[-(1:1000)],n=1000, adjust = 2),col="red",lwd=2)
lines(density(out.cond.pg2$beta.0.save[-(1:1000)],n=1000, adjust = 2),
col="green",lwd=2)
hist(out.comp.full$beta.0.save[-(1:1000)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
lines(density(beta.0.save[-(1:1000)],n=1000, adjust = 3),col="red",lwd=2)
lines(density(out.cond.2.full.pg$beta.0.save[-(1:1000)],n=1000, adjust = 3),
col="green",lwd=2)
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save[-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.0.save,n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.0.save[-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.0.save[-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 4, lty = 2, col = "red")
hist(out.comp.full$beta.save[1,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.save[1,],n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.save[1,-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.save[1,-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 2, lty = 2, col = "red")
hist(out.comp.full$beta.save[2,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.save[2,],n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.save[2,-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.save[2,-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 1, lty = 2, col = "blue")
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save[-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.0.save,n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.0.save[-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.0.save[-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 4, lty = 3, col = "blue")
hist(out.comp.full$beta.save[1,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.save[1,],n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.save[1,-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.save[1,-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 2, lty = 3, col = "blue")
hist(out.comp.full$beta.save[2,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.save[2,],n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.save[2,-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.save[2,-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 1, lty = 3, col = "blue")
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save[-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.0.save,n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.0.save[-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.0.save[-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 4, lty = 2, col = "blue", lwd = 2)
hist(out.comp.full$beta.save[1,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.save[1,],n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.save[1,-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.save[1,-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 2, lty = 2, col = "blue", lwd = 2)
hist(out.comp.full$beta.save[2,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.save[2,],n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.save[2,-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.save[2,-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 1, lty = 2, col = "blue", lwd = 2)
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save[-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.0.save,n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.0.save[-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.0.save[-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 4, lty = 2, lwd = 2)
hist(out.comp.full$beta.save[1,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.save[1,],n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.save[1,-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.save[1,-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 2, lty = 2, col = "blue", lwd = 2)
hist(out.comp.full$beta.save[2,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.save[2,],n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.save[2,-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.save[2,-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 1, lty = 2, col = "blue", lwd = 2)
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save[-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.0.save,n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.0.save[-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.0.save[-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 4, lty = 2, lwd = 2)
hist(out.comp.full$beta.save[1,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.save[1,],n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.save[1,-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.save[1,-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 2, lty = 2, lwd = 2)
hist(out.comp.full$beta.save[2,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.save[2,],n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.save[2,-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.save[2,-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 1, lty = 2, lwd = 2)
source(here("Polya_Gamma.R"))
X.pg <- cbind(rep(1, nrow(X.bern)), X.bern)
p <- ncol(X.pg)
mu.beta <- rep(0, p)
sigma.beta <- diag(2.25, p)
tic()
beta.save.pg <- polya_gamma(y.bern, X.pg, mu.beta, sigma.beta, 500000)
toc() # 236 sec
out.cond.pg <- list(beta.save = beta.save.pg$beta[-1,], beta.0.save = rnorm(n.mcmc, 0, 10),
n.mcmc = 100000, n = n, ds = ds, X.full = X.win.full)
tic()
out.cond.pg2 = spp.stg2.mcmc(out.cond.pg)
toc()
beta.save <- beta.save.pg$beta[2:3,]
# theta.save <- rep(0,n.mcmc)
lam.int.save <- rep(0, n.mcmc)
for(k in 1:n.mcmc){
if(k%%1000==0){cat(k," ")}
lam.int.save[k] <- sum(exp(log(ds)+X.win.full%*%beta.save[,k]))
#  theta.save[k] <- rgamma(1, 0.01 + n, rate = 0.01 + lam.int)
# lam.int.save[k] <- lam.int
};cat("\n")
out.cond.pg <- list(beta.save = beta.save.pg$beta[-1,],
# beta.0.save = log(rgamma(n.mcmc, n + 0.001, 1.001)),
n.mcmc = n.mcmc, n = n, ds = ds, X.full = X.win.full,
lam.int.save = lam.int.save)
# tic()
out.cond.pg3 <- spp.stg3.mcmc(out.cond.pg)
# prepare for second stage
# beta.0.precise <- rnorm(n.mcmc, mean = 3.7, sd = 1)
out.cond.pg <- list(beta.save = beta.save.pg$beta[-1,], beta.0.save = rnorm(n.mcmc, 0, 10),
n.mcmc = 500000, n = n, ds = ds, X.full = X.win.full)
out.cond.pg2 = spp.stg2.mcmc(out.cond.pg)
# prepare for second stage
# beta.0.precise <- rnorm(n.mcmc, mean = 3.7, sd = 1)
out.cond.pg <- list(beta.save = beta.save.pg$beta[-1,], beta.0.save = rnorm(500000, 0, 10),
n.mcmc = 500000, n = n, ds = ds, X.full = X.win.full)
out.cond.pg2 = spp.stg2.mcmc(out.cond.pg)
# prepare for third stage
out.cond.pg <- list(beta.save = beta.save.pg$beta[-1,],
# beta.0.save = log(rgamma(n.mcmc, n + 0.001, 1.001)),
n.mcmc = 500000, n = n, ds = ds, X.full = X.win.full,
lam.int.save = lam.int.save)
# tic()
out.cond.pg3 <- spp.stg3.mcmc(out.cond.pg)
n.mcmc <- 500000
# tic()
out.cond.pg3 <- spp.stg3.mcmc(out.cond.pg)
out.cond.pg <- list(beta.save = beta.save.pg$beta[-1,],
# beta.0.save = log(rgamma(n.mcmc, n + 0.001, 1.001)),
n.mcmc = 500000, n = n, ds = ds, X.full = X.win.full,
lam.int.save = lam.int.save)
# tic()
out.cond.pg3 <- spp.stg3.mcmc(out.cond.pg)
for(k in 1:n.mcmc){
if(k%%1000==0){cat(k," ")}
lam.int.save[k] <- sum(exp(log(ds)+X.win.full%*%beta.save[,k]))
#  theta.save[k] <- rgamma(1, 0.01 + n, rate = 0.01 + lam.int)
# lam.int.save[k] <- lam.int
};cat("\n")
# prepare for third stage
out.cond.pg <- list(beta.save = beta.save.pg$beta[-1,],
# beta.0.save = log(rgamma(n.mcmc, n + 0.001, 1.001)),
n.mcmc = n.mcmc, n = n, ds = ds, X.full = X.win.full,
lam.int.save = lam.int.save)
# tic()
out.cond.pg3 <- spp.stg3.mcmc(out.cond.pg)
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save[-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.0.save,n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.0.save[-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.0.save[-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 4, lty = 2, lwd = 2)
hist(out.comp.full$beta.save[1,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.save[1,],n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.save[1,-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.save[1,-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 2, lty = 2, lwd = 2)
hist(out.comp.full$beta.save[2,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.save[2,],n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.save[2,-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.save[2,-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 1, lty = 2, lwd = 2)
n.mcmc <- 100000
n.bg <- 50000
bg.pts <- rpoint(n.bg, win = combined.window)
X.bg <- cbind(bg.pts$x, bg.pts$y)
X.bern <- rbind(X.win, X.bg)
y.bern <- rep(0, n + n.bg)
y.bern[1:n] <- 1
n.mcmc
X.pg <- cbind(rep(1, nrow(X.bern)), X.bern)
p <- ncol(X.pg)
mu.beta <- rep(0, p)
sigma.beta <- diag(2.25, p)
tic()
beta.save.pg <- polya_gamma(y.bern, X.pg, mu.beta, sigma.beta, n.mcmc)
toc() # 236 sec
out.cond.pg <- list(beta.save = beta.save.pg$beta[-1,], beta.0.save = rnorm(n.mcmc, 0, 10),
n.mcmc = n.mcmc, n = n, ds = ds, X.full = X.win.full)
out.cond.2.full=spp.stg2.mcmc(out.cond.full)
out.cond.pg2 = spp.stg2.mcmc(out.cond.pg)
beta.save <- beta.save.pg$beta[2:3,]
# theta.save <- rep(0,n.mcmc)
lam.int.save <- rep(0, n.mcmc)
for(k in 1:n.mcmc){
if(k%%1000==0){cat(k," ")}
lam.int.save[k] <- sum(exp(log(ds)+X.win.full%*%beta.save[,k]))
#  theta.save[k] <- rgamma(1, 0.01 + n, rate = 0.01 + lam.int)
# lam.int.save[k] <- lam.int
};cat("\n")
# prepare for third stage
out.cond.pg <- list(beta.save = beta.save.pg$beta[-1,],
# beta.0.save = log(rgamma(n.mcmc, n + 0.001, 1.001)),
n.mcmc = n.mcmc, n = n, ds = ds, X.full = X.win.full,
lam.int.save = lam.int.save)
# tic()
out.cond.pg3 <- spp.stg3.mcmc(out.cond.pg)
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save[-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.0.save,n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.0.save[-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.0.save[-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 4, lty = 2, lwd = 2)
hist(out.comp.full$beta.save[1,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.save[1,],n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.save[1,-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.save[1,-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 2, lty = 2, lwd = 2)
hist(out.comp.full$beta.save[2,-(1:n.burn)],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1))
# lines(density(out.cond.full$beta.save[2,],n=1000),col="red",lwd=2)
lines(density(out.cond.pg2$beta.save[2,-(1:n.burn)],n=1000, adj = 2),col="red",lwd=2)
lines(density(out.cond.pg3$beta.save[2,-(1:n.burn)],n=1000, adj = 2),col="green",lwd=2)
abline(v = 1, lty = 2, lwd = 2)
