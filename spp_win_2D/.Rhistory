out.cond.2.full=spp.stg2.mcmc(out.cond.full)
toc()
layout(matrix(1:2,2,1))
plot(out.cond.2.full$beta.0.save,type="l")
# abline(h=beta.0,col=rgb(0,1,0,.8),lty=2)
matplot(t(out.cond.2.full$beta.save),lty=1,type="l")
# abline(h=beta,col=rgb(0,1,0,.8),lty=2)
burn.in <- 0.1*n.mcmc
beta.save <- out.cond.2.full$beta.save[,-(1:burn.in)]
beta.0.save <- out.cond.2.full$beta.0.save[-(1:burn.in)]
beta.save.full <- t(rbind(beta.0.save, beta.save))
vioplot(data.frame(beta.save.full),
names=expression(beta[0],beta[1],beta[2]),
ylim = c(-10,5))
abline(h = 0, lty = 2)
apply(beta.save.full,2,mean)
apply(beta.save.full,2,sd)
apply(beta.save.full,2,quantile,c(0.025,.975))
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save,prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
lines(density(out.cond.full$beta.0.save,n=1000),col=2,lwd=2)
lines(density(out.cond.2.full$beta.0.save,n=1000),col=3,lwd=2)
hist(out.comp.full$beta.save[1,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,1))
lines(density(out.cond.full$beta.save[1,],n=1000),col=2,lwd=2)
lines(density(out.cond.2.full$beta.save[1,],n=1000),col=3,lwd=2)
hist(out.comp.full$beta.save[2,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1))
lines(density(out.cond.full$beta.save[2,],n=1000),col=2,lwd=2)
lines(density(out.cond.2.full$beta.save[2,],n=1000),col=3,lwd=2)
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save,prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.0.save,n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.0.save,n=1000),col=3,lwd=1)
hist(out.comp.full$beta.save[1,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.save[1,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[1,],n=1000),col=3,lwd=1)
hist(out.comp.full$beta.save[2,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.save[2,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[2,],n=1000),col=3,lwd=1)
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save,prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.0.save,n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.0.save,n=1000),col=3,lwd=1)
hist(out.comp.full$beta.save[1,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,2))
lines(density(out.cond.full$beta.save[1,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[1,],n=1000),col=3,lwd=1)
hist(out.comp.full$beta.save[2,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.save[2,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[2,],n=1000),col=3,lwd=1)
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save,prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.0.save,n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.0.save,n=1000),col=3,lwd=1)
hist(out.comp.full$beta.save[1,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,3))
lines(density(out.cond.full$beta.save[1,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[1,],n=1000),col=3,lwd=1)
hist(out.comp.full$beta.save[2,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.save[2,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[2,],n=1000),col=3,lwd=1)
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save,prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.0.save,n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.0.save,n=1000),col=3,lwd=1)
hist(out.comp.full$beta.save[1,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,3.5))
lines(density(out.cond.full$beta.save[1,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[1,],n=1000),col=3,lwd=1)
hist(out.comp.full$beta.save[2,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.save[2,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[2,],n=1000),col=3,lwd=1)
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save,prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.0.save,n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.0.save,n=1000),col=3,lwd=1)
hist(out.comp.full$beta.save[1,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,4))
lines(density(out.cond.full$beta.save[1,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[1,],n=1000),col=3,lwd=1)
hist(out.comp.full$beta.save[2,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.save[2,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[2,],n=1000),col=3,lwd=1)
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save,prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.0.save,n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.0.save,n=1000),col=3,lwd=1)
hist(out.comp.full$beta.save[1,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,5))
lines(density(out.cond.full$beta.save[1,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[1,],n=1000),col=3,lwd=1)
hist(out.comp.full$beta.save[2,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.save[2,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[2,],n=1000),col=3,lwd=1)
par(mfrow = c(1,1))
hist(out.comp.full$beta.0.save,prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.0.save,n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.0.save,n=1000),col=3,lwd=1)
hist(out.comp.full$beta.save[1,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,5))
lines(density(out.cond.full$beta.save[1,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[1,],n=1000),col=3,lwd=1)
hist(out.comp.full$beta.save[2,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.save[2,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[2,],n=1000),col=3,lwd=1)
?density
hist(out.comp.full$beta.0.save,prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.0.save,n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.0.save,n=1000),col=3,lwd=1,adj=2)
hist(out.comp.full$beta.0.save,prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.0.save,n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.0.save,n=1000),col=3,lwd=1,adj=1.1)
hist(out.comp.full$beta.0.save,prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.0.save,n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.0.save,n=1000,adj=1.5),col=3,lwd=1)
hist(out.comp.full$beta.save[1,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,5))
lines(density(out.cond.full$beta.save[1,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[1,],n=1000,adj=1.5),col=3,lwd=1)
hist(out.comp.full$beta.save[2,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.save[2,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[2,],n=1000,adj=1.5),col=3,lwd=1)
hist(out.comp.full$beta.0.save,prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
lines(density(out.cond.full$beta.0.save,n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.0.save,n=1000,adj=1.5),col=3,lwd=1)
hist(out.comp.full$beta.save[1,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,5))
lines(density(out.cond.full$beta.save[1,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[1,],n=1000,adj=1.5),col=3,lwd=1)
hist(out.comp.full$beta.save[2,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,2))
lines(density(out.cond.full$beta.save[2,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[2,],n=1000,adj=1.5),col=3,lwd=1)
hist(out.comp.full$beta.0.save,prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
lines(density(out.cond.full$beta.0.save,n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.0.save,n=1000,adj=2),col=3,lwd=1)
hist(out.comp.full$beta.save[1,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,5))
lines(density(out.cond.full$beta.save[1,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[1,],n=1000,adj=2),col=3,lwd=1)
hist(out.comp.full$beta.save[2,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.save[2,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[2,],n=1000,adj=2),col=3,lwd=1)
save.image("~/Desktop/GlacierBay_Project/GlacierBay_Code/SPP_script.RData")
N.save=rep(0,n.mcmc)
for(k in 1:n.mcmc){
if(k%%10000==0){cat(k," ")}
beta.0.tmp=out.cond.2.full$beta.0.save[k]
beta.tmp=out.cond.2.full$beta.save[,k]
lam.nowin.int=sum(exp(log(ds)+beta.0.tmp+X.nowin.full%*%beta.tmp))
N.save[k]=n+rpois(1,lam.nowin.int)
};cat("\n")
X.nowin.full <- X.full[-win.idx,]
for(k in 1:n.mcmc){
if(k%%10000==0){cat(k," ")}
beta.0.tmp=out.cond.2.full$beta.0.save[k]
beta.tmp=out.cond.2.full$beta.save[,k]
lam.nowin.int=sum(exp(log(ds)+beta.0.tmp+X.nowin.full%*%beta.tmp))
N.save[k]=n+rpois(1,lam.nowin.int)
};cat("\n")
View(X.nowin.full)
N.save=rep(0,n.mcmc)
X.nowin.full <- X.full[-win.idx,]
for(k in 1:n.mcmc){
if(k%%10000==0){cat(k," ")}
beta.0.tmp=out.cond.2.full$beta.0.save[k]
beta.tmp=out.cond.2.full$beta.save[,k]
lam.nowin.int=sum(exp(log(ds)+beta.0.tmp+X.nowin.full%*%beta.tmp))
N.save[k]=n+rpois(1,lam.nowin.int)
};cat("\n")
lam.nowin.int
n+rpois(1,lam.nowin.int)
X.nowin.full <- X.full[-win.idx,]
n <- nrow(seal.mat)
for(k in 1:n.mcmc){
if(k%%10000==0){cat(k," ")}
beta.0.tmp=out.cond.2.full$beta.0.save[k]
beta.tmp=out.cond.2.full$beta.save[,k]
lam.nowin.int=sum(exp(log(ds)+beta.0.tmp+X.nowin.full%*%beta.tmp))
N.save[k]=n+rpois(1,lam.nowin.int)
};cat("\n")
tic()
for(k in 1:n.mcmc){
if(k%%10000==0){cat(k," ")}
beta.0.tmp=out.cond.2.full$beta.0.save[k]
beta.tmp=out.cond.2.full$beta.save[,k]
lam.nowin.int=sum(exp(log(ds)+beta.0.tmp+X.nowin.full%*%beta.tmp))
N.save[k]=n+rpois(1,lam.nowin.int)
};cat("\n")
toc()
par(mfrow = c(1,1))
plot(N.save,type="l")
par(mfrow = c(1,1))
plot(N.save,type="l")
hist(N.save,breaks=50,prob=TRUE,main="",xlab="N")
tot.win.area/tot.area
# discard burn-in
N.save <- N.save[-(1:n.burn),]
# discard burn-in
n.burn <- 0.1*n.mcmc
# discard burn-in
N.save <- N.save[-(1:n.burn),]
# discard burn-in
N.save <- N.save[-(1:n.burn)]
plot(N.save,type="l")
hist(N.save,breaks=50,prob=TRUE,main="",xlab="N")
mean(N.save)
mean(N.save)
sd(N.save)
quantile(N.save, c(0.025, 0.975))
tot.win.area/tot.nowin.area
tot.win.area/tot.nonwin.area
tot.nonwin.area/tot.win.area
(tot.nonwin.area/tot.win.area)*n
(tot.nonwin.area/tot.win.area)*n + n
ggplot() +
geom_sf(data = survey.poly) +
geom_sf(data = footprint) +
geom_sf(data = seal.locs, size = 0.5)
save.image("~/Desktop/GlacierBay_Project/GlacierBay_Code/SPP_script.RData")
path <- here("NPS_data", "HARBORSEAL_2007", "survey_polygons")
survey.poly.20070618 <- st_read(dsn = path, layer = "JHI_20070618_surveyboundary")
ggplot() +
geom_sf(data = survey.poly.20070618, fill = alpha("black",0))
path <- here("NPS_data", "HARBORSEAL_2007", "footprints")
footprint.20070619 <- st_read(dsn = path, layer = "JHI_20070619_footprint")
path <- here("NPS_data", "HARBORSEAL_2007", "survey_polygons")
survey.poly.20070619 <- st_read(dsn = path, layer = "JHI_20070619_surveyboundary")
ggplot() +
geom_sf(data = survey.poly.20070618, fill = alpha("black",0)) +
geom_sf(data = survey.poly.20070619, fill = alpha("black",0), color = "red")
ggplot() +
geom_sf(data = survey.poly.20070618, fill = alpha("black",0)) +
geom_sf(data = survey.poly.20070619, fill = alpha("black",0), color = "red")
library(tidyverse)
library(raster)
library(spatstat)
set.seed(1234)
# set domain
x.domain <- c(0,0.9)
y.domain <- c(0,0.9)
# define the coordinates for window squares
win.length <- 0.1
gap <- 0.1
domain.length <- x.domain[2] - x.domain[1]
coords <- expand.grid(x = seq(gap, domain.length - win.length - gap, by = win.length + gap),
y = seq(gap, domain.length - win.length - gap, by = win.length + gap))
# create individual squares
squares <- lapply(1:nrow(coords), function(i) {
x0 <- coords$x[i]
y0 <- coords$y[i]
owin(xrange = c(x0, x0 + win.length), yrange = c(y0, y0 + win.length))
})
# combine squares into single window
combined.window <- do.call(union.owin, squares)
# calculate areas
tot.area <- (x.domain[2] - x.domain[1])*(y.domain[2] - y.domain[1])
tot.win.area <- area.owin(combined.window)
n.win <- 16
win.area <- tot.win.area/n.win
tot.nonwin.area <- tot.area - tot.win.area
# plot the window
domain <- owin(xrange = c(0,domain.length), yrange = c(0,domain.length))
plot(domain)
plot(combined.window, add = TRUE)
tot.win.area/tot.area
# get quadrature grid
x.m <- 100
y.m <- 100
m <- x.m*y.m
x.full <- seq(x.domain[1], x.domain[2], length.out = x.m)
y.full <- x.full
s.full <- expand.grid(x = x.full, y = y.full)
plot(domain)
plot(combined.window, add = TRUE)
points(s.full, pch = 19, cex = 0.05)
ds <- (x.full[2] - x.full[1])^2
# set X matrix
X.full <- matrix(0,m,2)
x1 <- s.full[,1]
x2 <- s.full[,2]
X.full[,1] <- x1
X.full[,2] <- x2
beta <- c(2,1)
beta.0 <- 4
lam.full <- exp(beta.0+X.full%*%beta)
lam.max <- max(lam.full)
# plot covariates and lambda
full.df <- as.data.frame(cbind(s.full, x1, x2, lam.full))
ggplot(data = full.df, aes(x = x, y = y, col = x)) +
geom_point(size = 0.5)
ggplot(data = full.df, aes(x = x, y = y, col = y)) +
geom_point(size = 0.5)
ggplot(data = full.df, aes(x = x, y = y, col = lam.full)) +
geom_point(size = 0.5)
# create full raster
full.df <- full.df %>% rename(z = lam.full)
full.raster <- rasterFromXYZ(full.df)
plot(full.raster)
M=rpois(1, lam.max)
x.superpop <- runif(M, x.domain[1], x.domain[2])
y.superpop <- runif(M, y.domain[1], y.domain[2])
s.superpop <- cbind(x.superpop, y.superpop)
X.superpop <- cbind(x.superpop, y.superpop)
lam.superpop=exp(beta.0+X.superpop%*%beta)
obs.idx=rbinom(M,1,lam.superpop/lam.max)==1
s.obs=s.superpop[obs.idx,] # total observed points
X.obs=X.superpop[obs.idx,]
lam.obs <- lam.superpop[obs.idx]
N=nrow(s.obs) # 218
# plot superpop lambda
superpop.df <- as.data.frame(cbind(x.superpop, y.superpop, lam.superpop))
ggplot(data = superpop.df, aes(x = x.superpop, y = y.superpop, col = lam.superpop)) +
geom_point(size = 0.5)
obs.win <- inside.owin(s.obs[,1], s.obs[,2], combined.window)
obs.win.idx <- (1:N)[obs.win]
n=length(obs.win.idx) # 44
full.win <- inside.owin(s.full[,1], s.full[,2], combined.window)
full.win.idx <- (1:m)[full.win]
s.win=s.obs[obs.win.idx,]
X.win=X.obs[obs.win.idx,]
X.win.full=X.full[full.win.idx,]
X.nowin.full=X.full[-full.win.idx,]
obs.df <- as.data.frame(s.obs)
ggplot(data = obs.df, aes(x = x.superpop, y = y.superpop,
col = factor(obs.win))) +
geom_point()
plot(domain)
plot(combined.window, add = TRUE)
points(s.obs[,1], s.obs[,2], col = factor(obs.win), pch = 19, cex = 0.5)
n.mcmc=100000
source("spp.comp.mcmc.R")
getwd()
setwd("~/Desktop/GlacierBay_Project/GlacierBay_Code/spp_win_2D")
n.mcmc=100000
source("spp.comp.mcmc.R")
tic()
out.comp.full=spp.comp.mcmc(s.win,X.win,X.win.full,ds,win.area,n.mcmc)
toc() # 6.568 sec
layout(matrix(1:2,2,1))
plot(out.comp.full$beta.0.save,type="l")
n.mcmc=100000
source("spp.cond.mcmc.R")
out.cond.full=spp.cond.mcmc(s.win,X.win,X.win.full,ds,n.mcmc)
source("spp.stg2.mcmc.R")
out.cond.2.full=spp.stg2.mcmc(out.cond.full)
N.save=rep(0,n.mcmc)
for(k in 1:n.mcmc){
if(k%%10000==0){cat(k," ")}
beta.0.tmp=out.cond.2.full$beta.0.save[k]
beta.tmp=out.cond.2.full$beta.save[,k]
lam.nowin.int=sum(exp(log(ds)+beta.0.tmp+X.nowin.full%*%beta.tmp))
N.save[k]=n+rpois(1,lam.nowin.int)
};cat("\n")
par(mfrow = c(1,1))
hist(N.save,breaks=50,prob=TRUE,main="",xlab="N")
abline(v=N,col=rgb(0,1,0,.8),lty=2,lwd=2)
hist(N.save[-(1:1000)],breaks=50,prob=TRUE,main="",xlab="N")
abline(v=N,col=rgb(0,1,0,.8),lty=2,lwd=2)
domain <- owin(xrange = c(0,domain.length), yrange = c(0,domain.length))
plot(domain)
plot(combined.window, add = TRUE)
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save,prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
lines(density(out.cond.full$beta.0.save,n=1000),col=2,lwd=2)
lines(density(out.cond.2.full$beta.0.save,n=1000),col=3,lwd=2)
hist(out.comp.full$beta.save[1,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,1))
lines(density(out.cond.full$beta.save[1,],n=1000),col=2,lwd=2)
lines(density(out.cond.2.full$beta.save[1,],n=1000),col=3,lwd=2)
hist(out.comp.full$beta.save[2,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1))
lines(density(out.cond.full$beta.save[2,],n=1000),col=2,lwd=2)
lines(density(out.cond.2.full$beta.save[2,],n=1000),col=3,lwd=2)
hist(N.save[-(1:1000)],breaks=50,prob=TRUE,main="",xlab="N")
abline(v=N,col=rgb(0,1,0,.8),lty=2,lwd=2)
par(mfrow = c(1,1))
hist(N.save[-(1:1000)],breaks=50,prob=TRUE,main="",xlab="N")
abline(v=N,col=rgb(0,1,0,.8),lty=2,lwd=2)
load("~/Desktop/GlacierBay_Project/GlacierBay_Code/SPP_script.RData")
ggplot() +
geom_sf(data = survey.poly) +
geom_sf(data = footprint) +
geom_sf(data = seal.locs, size = 0.5)
layout(matrix(1:3,1,3))
hist(out.comp.full$beta.0.save,prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
lines(density(out.cond.full$beta.0.save,n=1000),col=2,lwd=2)
lines(density(out.cond.2.full$beta.0.save,n=1000),col=3,lwd=2)
hist(out.comp.full$beta.save[1,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,1))
lines(density(out.cond.full$beta.save[1,],n=1000),col=2,lwd=2)
lines(density(out.cond.2.full$beta.save[1,],n=1000),col=3,lwd=2)
hist(out.comp.full$beta.save[2,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1))
lines(density(out.cond.full$beta.save[2,],n=1000),col=2,lwd=2)
lines(density(out.cond.2.full$beta.save[2,],n=1000),col=3,lwd=2)
load("~/Desktop/GlacierBay_Project/GlacierBay_Code/SPP_script.RData")
hist(out.comp.full$beta.0.save,prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
lines(density(out.cond.full$beta.0.save,n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.0.save,n=1000,adj=2),col=3,lwd=1)
hist(out.comp.full$beta.save[1,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,5))
lines(density(out.cond.full$beta.save[1,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[1,],n=1000,adj=2),col=3,lwd=1)
hist(out.comp.full$beta.save[2,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.save[2,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[2,],n=1000,adj=2),col=3,lwd=1)
hist(out.comp.full$beta.0.save,prob=TRUE,breaks=60,main="",xlab=bquote(beta[0]),
ylim = c(0,1))
lines(density(out.cond.full$beta.0.save,n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.0.save,n=1000,adj=2),col=3,lwd=1)
hist(out.comp.full$beta.save[1,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[1]),
ylim = c(0,5))
lines(density(out.cond.full$beta.save[1,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[1,],n=1000,adj=2),col=3,lwd=1)
hist(out.comp.full$beta.save[2,],prob=TRUE,breaks=60,main="",xlab=bquote(beta[2]),
ylim = c(0,1.5))
lines(density(out.cond.full$beta.save[2,],n=1000),col=2,lwd=1)
lines(density(out.cond.2.full$beta.save[2,],n=1000,adj=2),col=3,lwd=1)
plot(bath.rast.survey)
plot(N.save,type="l")
hist(N.save,breaks=50,prob=TRUE,main="",xlab="N")
mean(N.save)
sd(N.save)
quantile(N.save, c(0.025, 0.975))
install.packages("lavaan")
install.packages("lavaanPlot")
install.packages("piecewiseSEM")
install.packages("jagsUI")
install.packages("pals")
library(lavaan)
library(lavaanPlot)
# library(piecewiseSEM)
library(tidyverse)
library(rjags)
library(jagsUI)
library(coda)
library(matrixStats)
library(pals)
getRversion()
set.seed(2002)
semdata <- data.frame('years' = 1:60) |> #60 years of data
within({
# precip is simulated from a random distribution with a mean of 100, standard devation of 10 . 60 values will be taken from that distribution (one for each year).
precip <- rnorm(60, 100, 10)
#temperature is modeled with an intercept of 0.05 a positive slope of magnitude 0.05 to indicate it is increasing each year by 0.05 degrees Celsius. Plus some error/ noise. Noise is taken from a Gaussian distribtuion.
temperature <- 0.05 + 0.05*years + rnorm(60, 1, 0.5)
#simulate the caterpillar richness as a function of years and temps
catrich <- 350 - 2*years -50*temperature + rnorm(60, 50, 50)
})
#visualize trend of temperature across the 60 years
ggplot(semdata, aes(years, temperature))+
geom_point()+
geom_smooth(method = lm)
set.seed(2002)
semdata <- data.frame('years' = 1:60) |> #60 years of data
within({
# precip is simulated from a random distribution with a mean of 100, standard devation of 10 . 60 values will be taken from that distribution (one for each year).
precip <- rnorm(60, 100, 10)
#temperature is modeled with an intercept of 0.05 a positive slope of magnitude 0.05 to indicate it is increasing each year by 0.05 degrees Celsius. Plus some error/ noise. Noise is taken from a Gaussian distribtuion.
temperature <- 0.05 + 0.05*years + rnorm(60, 1, 0.5)
#simulate the caterpillar richness as a function of years and temps
catrich <- 350 - 2*years -50*temperature + rnorm(60, 50, 50)
})
#visualize trend of temperature across the 60 years
ggplot(semdata, aes(years, temperature))+
geom_point()+
geom_smooth(method = lm)
View(semdata)
model1.fit <- sem(model1, data = semdata)
cov(semdata)
model1 <- '
precip + temperature ~ years
catrich ~ years + temperature'
# fitting the sem model to your data
model1.fit <- sem(model1, data = semdata)
summary(model1.fit, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)
#PLot model
lavaanPlot(name = "model1", model1.fit, coefs = TRUE) # prints path diagram that specifies relationships specified in `model1` along with the estimated path coefficients from the fitted model (here, the unstandardized coefficient estimates in the summary output.)
sem
View(sem)
?lavaan
#PLot model
lavaanPlot(name = "model1", model1.fit, coefs = TRUE) # prints path diagram that specifies relationships specified in `model1` along with the estimated path coefficients from the fitted model (here, the unstandardized coefficient estimates in the summary output.)
